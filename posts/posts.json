[
  {
    "path": "posts/simpleshinypower0/",
    "title": "Simple shiny app: power0",
    "description": "A simple but useful shiny app.",
    "author": [
      {
        "name": "Ronald Glenn Thomas",
        "url": "https://focusonR.org"
      }
    ],
    "date": "2022-08-05",
    "categories": [],
    "contents": "\nIntroduction\nConsider an app that is a balance of simple and functional – one that\ncalculates the power for a 2-sample t-test as a function of the\nstandardized effect size. Here is our shiny app\npower0.R:\n\n\nui <- fluidPage(\ntitlePanel(\"Power Calculator for Two Group Parallel Designs\"),\nsliderInput(\"N\", \"Total Sample Size:\", min = 0, max = 300, value = 100),\nplotOutput(\"plot\"),\nverbatimTextOutput(\"eff\"))\n\nserver <- function(input, output, session) {\n  delta = seq(0, 1.5,.05)\n  pow = reactive(sapply(delta, function(x) power.t.test(input$N, d=x)$power ))\n  eff =  renderText(power.t.test(input$N, power=.8)$d)\n  output$plot <- renderPlot({\n  plot(delta, pow(), cex=1.5, ylab=\"power\")\n  abline(h = .8,  col = \"red\", lwd =2.5, lty = 4)\n  abline(v = eff(), col = \"blue\",lwd =2.5, lty = 4)})  \n  output$eff <- renderText(\n    paste0(\"Std. effect detectable with power 80% = \", eff()) )\n}\nshinyApp(ui, server)\n\n\n\n\n\n",
    "preview": {},
    "last_modified": "2022-08-05T09:44:08-07:00",
    "input_file": {}
  },
  {
    "path": "posts/dockerizeshinyapp/",
    "title": "Dockerize Shiny Apps",
    "description": "A step-by-step walkthrough of developing a dockerfile for an R shiny app.",
    "author": [
      {
        "name": "Ronald Glenn Thomas",
        "url": "https://focusonR.org"
      }
    ],
    "date": "2022-07-09",
    "categories": [],
    "contents": "\ngo to appendix\n\n\n\nIntroduction\nThis is the first in a series of posts with suggested strategies for\nleveraging a set of open source technologies to provide solutions to one\nof the central challenges in the practice of data science i.e. how to\neffectively communicate analysis results to clients and collaborators.\nThe group of technologies (or stack) we’ll employ is: linux, R, Shiny,\nCaddy, and Docker.\nThis initial post provides a minimal example of applying these\ntechnologies for the development and hosting an interactive tool for\nconducting a statistical power analysis.\nWe start with a simple, but still useful, shiny app and end with a\nsecure (encrypted and authenticated) web site with a custom domain\nname.\nLets assume we’re just finished developing a ‘shiny’ new shiny app,\nnamed power0 .\nSee the details of the power0 shiny app here.\nA screenshot of the finished product shows a shiny app with a widget\nto select the sample size and a visualization (2D plot) of the power as\na function of the standardized effect size:\n\n\n\n\n\n\n\n\n\n Photo by\nIan\nTaylor on\nUnsplash\n\nHere is our dockerfile:\n\nFROM rocker/shiny:4.2.0\nCOPY power0.R /srv/shiny-server/\nUSER shiny\nCMD [\"/usr/bin/shiny-server\"]\n\nThats it. With the dockerfile and the app.R fine in the same\ndirectory we can first build the docker image, and then push it to\nDocker hub as a convenient repository. (Alternatively we could copy it\ndirectly to the server or to another site, e.g github.com. )\nDetails are here\nHosting\nOnce we have a production ready dockerized shiny app available, we’ll\nwant to host it on the internet. To do that we’ll need the following\n:\na virtual server\na static IP address\na domain name\na web server\nan SSL certificate (encrypted communication)\nan authentication method (password protection)\na reverse proxy method\nThis can all be done at no cost if you have your own (self-hosted)\nserver and domain name, or at minimal cost using a cloud-hosting service\n(e.g. Amazon’s EC2 or Digital Ocean) and a “leased” domain name from,\ne.g. via GoDaddy, or Amazon’s Route 53.\nThere are a number of cloud based server options: Microsoft Azure,\nGoogle Cloud, Amazon AWS, Digital Ocean to name a few.\nSpecific instructions for AWS EC2 are here here\nor here in the appendix\nYou need a static IP to point your domain name to the virtual server.\nOn AWS an “Elastic IP” can be assigned (for a fee). The details are\nhere.\nUse elastic IP (to allow server to be run “on-demand”) * click on\nelastic IP in left panel * select associate Elastic IP 13.57.139.31\nchoose an instance (shiny-july22) to associate with.\nLog into new instance with ssh from local\nssh -i ~/.ssh/aws18.pem ubuntu@13.57.139.31\nor\nssh ec2 \nOne piece of software to install on the server: Docker.\nadd ubuntu to the docker group.\nget domain name from Route 53\nInstall Docker on server. sudo apt update sudo docker run -d -p\n80:80 –name test4 -p 443:443 -v ~/mywebsite:/usr/share/caddy/ -v\n~/Caddyfile:/etc/caddy/Caddyfile -v caddy_data:/data caddy:2\nto debug\nsudo docker logs test4\ncat Caddyfile (bob/utter credentials)\nrgtlab.org {\n    basicauth * {\n        bob JDJhJDE0JEw4Zk5MQi5nYndEaHRjVTFVeGl2a2VBZTVPcFI0THhEZUd0OEJkOTR2d0VjRUxsMDBsQUg2\n    }\n    respond \"It works!\"\n    root * /var/www/html\n}\n\n\n\n```sh\n\nview app at \nhttp://ec2-13.57.139.31.us-west-1.compute.amazonaws.com:3838/zenn/hello/\nSecurity Set-up\nGet domain name, e.g. from Godaddy.com. Mine is\ninferencex.com\nget an elastic IP, reserved for your personal use. Needed for\nsecurity certificate use, e.g. my elastic IP is 13.57.139.31\nTips\nBuild and run instance (call it four) open in shell for\nexploration\ndocker build -t four .\ndocker run -it --rm four /bin/bash\n\nConstruct a config file in ~/.ssh as:\nHost ec2\n    HostName 13.57.139.31\n    User ubuntu\n    Port 22\n    IdentityFile ~/.ssh/aws18.pem\nthen you ssh into new server with\n\nsh> ssh ec2\nTo construct the web site we need four files in the home directory\nfor default user ubuntu. The first file is power0.R our shiny R program\nfile. We can upload it from our local machine with scp or copy it in\nfrom github.\ngit archive –remote=ssh://host/pathto/repo.git HEAD README.md | tar xO\nWe’ll use Caddy as our web server To allow the automation of one of\nthe most complicated parts of this exercise, the i.e. aquiring and\ninstall an SSL certificate.\nThe second file is the Caddyfile configuration file. The caddyfile\nprovides three things. 1. the site domain name. 2. the authentication\npair login/hash-password, and 3. the ‘reverse proxy’ map that redirects\nrequests to port 443 (ssl port) to port 3838 (shiny port).\nThe Caddyfile and docker-compose.yml file are\nCaddyfile\nauth info bob/utter\n\nrgtlab.org {\n    basicauth * {\n        bob JDJhJDE0JEw4Zk5MQi5nYndEaHRjVTFVeGl2a2VBZTVPcFI0THhEZUd0OEJkOTR2d0VjRUxsMDBsQUg2\n    }\n    root * /srv\n    handle_path /power0/* {\n        reverse_proxy power0:3838\n    }\n    file_server\n}\nAnd the third file is the docker compose file that pulls our shiny\napp, and the caddy server and create a local network for them to\ncommunicate in.\ndocker-compose.yml\n\nversion: \"3.7\"\n\nservices:\n  power0:\n    image: rgt47/power0:latest\n  caddy:\n    image: caddy:2.3.0-alpine\n    ports:\n      - \"443:443\"\n    volumes:\n      - $PWD/Caddyfile:/etc/caddy/Caddyfile\n      - $PWD/site:/srv\n      - caddy_data:/data\n      - caddy_config:/config\nvolumes:\n  caddy_data:\n  caddy_config:\n\nThe index.html file\n\n<!DOCTYPE html>\n<html>\n  <body>\n      <a href=\"./power0/\">Power0<\/a>\n  <\/body>\n<\/html> \nto add authentication to the web site use basic auth supplied by\ncaddy first to get access to the command line interface (CLI) for caddy\nissue the docker command to load a caddy container from Docker Hub\ndocker-compose run caddy caddy hash-password\n\n\ndocker run -it --rm caddy:2.3.0-alpine /bin/sh\ncaddy hash-password --plaintext bar\nAppendix1\nPull the power.R file from rgt47 gist\n❯ curl https://gist.githubusercontent.com/rgt47/ae58ec9aab928793929a74f20b0fd8ce/raw/power0.R\nAppendix2\nAWS offers a free set of servers for the first 12\nmonths.\nOpen EC2 console.\n   https://aws.amazon.com/console\nor\n   https://us-west-1.console.aws.amazon.com/ec2/v2/home?region=us-west-1#\n\n\n\nlog in\nAfter logging in to AWS start by setting up a working environment. In\nparticular\nssh\nDomain Name\nStatic IP\nside panel, click “ec2”\nside panel, click “Instances”\nfrom top bar, click “Launch Instances”\nFrom “Quick Start” click Ubuntu button.\nName the server say shiny-july22\n Choose an AMI (instance template, operating system):\nSuggest choose “Ubuntu Server 22.04 LTS”, but other linux\ndistributions can be utilized, e.g.u Red Hat, or SUSE.)\ne.g. ubuntu/images/hvm-ssd/ubuntu-jammy-22.04-amd64-server-20220609\nNext choose an instance type, e.g. “t2-micro”.\n(different instances are mixtures of size, processors, memory, instance\nstorage, network performance) click “Next: Configure Instance\nDetails”\n*. choose Key pair (use in place aws18.pem) or set up new pair\nThe first time you create an AWS account you need to exchange an SSH\nkey pair with AWS.\nYou can generate an ssh key pair locally and upload public key to\nEC2.\nCreate a directory to hold the keys. e.g. ~/.ssh.\nFrom inside .ssh generate the keys with the command\n\nssh-gen -PEM ??? name keys something like ssh-rsa.\n\nOn EC2 select security/keys and upload the import the public key.\nAdd security group, e.g. ‘shiny’ (sg-0f37c94ac1e1b6250) allowing\nports 80 (http), 22 (ssh), 443 (https), and 3838 (shiny). and 8787\nchoose 30 GB of EBS General Purpose (SSD) or Magnetic storage\nclick Launch Instance\nUse elastic IP (to allow server to be run “on-demand”) * click on\nelastic IP in left panel * select associate Elastic IP 13.57.139.31\nchoose an instance (shiny-july22) to associate with.\nLog into new instance with ssh from local\nssh -i ~/.ssh/aws18.pem ubuntu@13.57.139.31\nor\nssh ec2 \nif you’ve set up a config file in ~/.ssh\n(see Tips at the end of the blog)\nset up the environment on server. There is only one piece of software\nto install: Docker.\napt-get -y update\napt-get -y upgrade\n\napt-get install -y \\\n    docker \\\n    docker-compose\n\nsystemctl enable docker\n# or use homebrew for linux\n\nAdd ubuntu to the docker group\nget domain name from Route 53.\nGo to godaddy or Amazon route 53 to associate a domain name with the\nElastic IP in EC2.\n(screenshot)\nTo associate domain name rgtlab.org. in Route 53:\nclick on ‘hosted zones’ in side panel\nclick on rgtlab.org in center panel\nclick on checkbox for rgtlab.org type=A line\nthen click on edit record in right panel\nchange ip address to 13.57.139.31\n\n\n\n",
    "preview": "posts/dockerizeshinyapp/rshiny.png",
    "last_modified": "2022-08-07T19:12:27-07:00",
    "input_file": "dockerizeshinyapp.knit.md",
    "preview_width": 1200,
    "preview_height": 482
  },
  {
    "path": "posts/2021-11-14-factors-are-confusing/",
    "title": "Factors are confusing.",
    "description": "A short description of the post.",
    "author": [
      {
        "name": "Ronald Glenn Thomas",
        "url": "https://focusonR.org"
      }
    ],
    "date": "2021-12-05",
    "categories": [
      "vim",
      "R"
    ],
    "contents": "\nIntroduction\nI’ve been using R for a while now and I have (like many of my colleagues) wrestled with factors frequently. I have on occasion found them useful particulary in defining an order among categorical variables. see example 2 below, but more often they have been a hassle to deal with rather than a help.\nThe typical scenario is when a data set is read from a csv file and the input function (e.g. read.csv() ) decides to declare a numeric variable to be a factor. and categorical variable which should be categorical are defined as factors.\nWhy does this happen? Why is it necessary to use the readAsFactor=False flag in order to get the more sensible behavior.\nLets look back at some of the correspondence between R core members to see what the original thinking was…\nConsider the following data set (borrowed from https://www.tutorialspoint.com/r/r_factors.htm\n\nheight weight gender 1 132 48 male 2 151 49 male 3 162 66 female 4 139 53 female 5 166 67 male 6 147 52 female 7 122 40 male [1] FALSE [1] “male” “male” “female” “female” “male” “female” “male”\n\nRunning the above on the tutorialspoint web site gives a true response for is.factor(gender). But when I run it I get a false. The web site indicates R version 3.4.1 is being run. My version is 4.1.2.\nInteresting. Did the default change somewhere along the line? Let check the release notes. for 4.1\nSample reference section reference. Pocock and Simon (1975)\nMethods\nResults\nPrepare for analyses\n\n\nset.seed(1234)\nlibrary(ggplot2)\nlibrary(lattice)\n\n\n\n\n\nlibrary(PerformanceAnalytics)\nlibrary(quantmod)\nlibrary(dygraphs)\n\n# Function to calculate monthly returns on a stock \nmonthly_stock_returns <- function(ticker, start_year) {\n  \n  # Download the data from Yahoo finance\n  symbol <- getSymbols(ticker, src = 'yahoo', \n                       auto.assign = FALSE, warnings = FALSE)\n  \n  # Tranform it to monthly returns using quantmode::periodReturn\n  data <- periodReturn(symbol, period = 'monthly', \n                       subset=paste(start_year, \"::\", sep = \"\"),\n                       type = 'log')\n\n  # Let's rename the column of returns to something intuitive because\n  # the column name is what will eventually be displayed\n  colnames(data) <- as.character(ticker)\n\n  # We want to be able to work with the xts objects so let's explicitly\n  # assign them into the global environment using ticker name \n  assign(ticker, data, .GlobalEnv)\n}\n\n\n\nLet’s graph the individual performances of each stock over time.\n\n\n# Before we combine these into a portfolio, graph the individual returns\n# and see if anything jumps out as unusual. It looks like something \n# affected Google in March of 2014, but didn't affect JP Morgan or Amazon.\nyear <- 2010\n\n# Use the function the monthly returns on 3 stocks, and pass in the 'year' value\n# Let's choose Google, JP Morgan and Amazon; after you run these functions, have \n# a look at the global environment and make sure your three xts objects are there\nmonthly_stock_returns('GOOG', year)\nmonthly_stock_returns('JPM', year)\nmonthly_stock_returns('AMZN', year)\nmerged_returns <- merge.xts(GOOG, JPM, AMZN)\ndygraph(merged_returns, main = \"Google v JP Morgan v Amazon\") %>%\n  dyAxis(\"y\", label = \"%\") %>%\n  dyOptions(colors = RColorBrewer::brewer.pal(3, \"Set2\"))\n\n\n\n\n\n\n# Before we combine these into a portfolio, graph the individual returns\n# and see if anything jumps out as unusual. It looks like something \n# affected Google in March of 2014, but didn't affect JP Morgan or Amazon.\ndygraph(merged_returns, main = \"Google v JP Morgan v Amazon\") %>%\n  dyAxis(\"y\", label = \"%\") %>%\n  dyOptions(colors = RColorBrewer::brewer.pal(3, \"Set2\"))\n\n\n\n\n\n\nmpg\ncyl\ndisp\nhp\ndrat\nwt\nqsec\nvs\nam\ngear\ncarb\nMazda RX4\n21\n6\n160\n110\n3.9\n2.6\n16\n0\n1\n4\n4\nMazda RX4 Wag\n21\n6\n160\n110\n3.9\n2.9\n17\n0\n1\n4\n4\nDatsun 710\n23\n4\n108\n93\n3.9\n2.3\n19\n1\n1\n4\n1\nHornet 4 Drive\n21\n6\n258\n110\n3.1\n3.2\n19\n1\n0\n3\n1\nHornet Sportabout\n19\n8\n360\n175\n3.1\n3.4\n17\n0\n0\n3\n2\nValiant\n18\n6\n225\n105\n2.8\n3.5\n20\n1\n0\n3\n1\nDuster 360\n14\n8\n360\n245\n3.2\n3.6\n16\n0\n0\n3\n4\nMerc 240D\n24\n4\n147\n62\n3.7\n3.2\n20\n1\n0\n4\n2\nMerc 230\n23\n4\n141\n95\n3.9\n3.1\n23\n1\n0\n4\n2\nMerc 280\n19\n6\n168\n123\n3.9\n3.4\n18\n1\n0\n4\n4\nMerc 280C\n18\n6\n168\n123\n3.9\n3.4\n19\n1\n0\n4\n4\nMerc 450SE\n16\n8\n276\n180\n3.1\n4.1\n17\n0\n0\n3\n3\nMerc 450SL\n17\n8\n276\n180\n3.1\n3.7\n18\n0\n0\n3\n3\nMerc 450SLC\n15\n8\n276\n180\n3.1\n3.8\n18\n0\n0\n3\n3\nCadillac Fleetwood\n10\n8\n472\n205\n2.9\n5.2\n18\n0\n0\n3\n4\nLincoln Continental\n10\n8\n460\n215\n3.0\n5.4\n18\n0\n0\n3\n4\nChrysler Imperial\n15\n8\n440\n230\n3.2\n5.3\n17\n0\n0\n3\n4\nFiat 128\n32\n4\n79\n66\n4.1\n2.2\n19\n1\n1\n4\n1\nHonda Civic\n30\n4\n76\n52\n4.9\n1.6\n19\n1\n1\n4\n2\nToyota Corolla\n34\n4\n71\n65\n4.2\n1.8\n20\n1\n1\n4\n1\nToyota Corona\n22\n4\n120\n97\n3.7\n2.5\n20\n1\n0\n3\n1\nDodge Challenger\n16\n8\n318\n150\n2.8\n3.5\n17\n0\n0\n3\n2\nAMC Javelin\n15\n8\n304\n150\n3.1\n3.4\n17\n0\n0\n3\n2\nCamaro Z28\n13\n8\n350\n245\n3.7\n3.8\n15\n0\n0\n3\n4\nPontiac Firebird\n19\n8\n400\n175\n3.1\n3.9\n17\n0\n0\n3\n2\nFiat X1-9\n27\n4\n79\n66\n4.1\n1.9\n19\n1\n1\n4\n1\nPorsche 914-2\n26\n4\n120\n91\n4.4\n2.1\n17\n0\n1\n5\n2\nLotus Europa\n30\n4\n95\n113\n3.8\n1.5\n17\n1\n1\n5\n2\nFord Pantera L\n16\n8\n351\n264\n4.2\n3.2\n14\n0\n1\n5\n4\nFerrari Dino\n20\n6\n145\n175\n3.6\n2.8\n16\n0\n1\n5\n6\nMaserati Bora\n15\n8\n301\n335\n3.5\n3.6\n15\n0\n1\n5\n8\nVolvo 142E\n21\n4\n121\n109\n4.1\n2.8\n19\n1\n1\n4\n2\n\n\nThis content will appear in the gutter of the article.\n\n\n`\n\ndate\nForecast\nHi_95\nLo_95\n2017-03-01\n54\n64\n44\n2017-04-01\n54\n68\n40\n2017-05-01\n54\n71\n37\n2017-06-01\n54\n74\n34\n2017-07-01\n54\n76\n32\n2017-08-01\n54\n79\n29\n\n\n\n\nPocock, SJ, and R Simon. 1975. “Sequential treatment assignment with balancing for prognostic factors in the controlled clinical trial.” Biometrics. http://www.jstor.org/stable/2529712.\n\n\n\n\n",
    "preview": {},
    "last_modified": "2021-12-05T12:08:40-08:00",
    "input_file": {}
  },
  {
    "path": "posts/2021-11-19-a-small-but-very-useful-utility/",
    "title": "Cs(), A small but very useful utility.",
    "description": "A short description of the post.",
    "author": [
      {
        "name": "Ronald Glenn Thomas",
        "url": "https://focusonR.org"
      }
    ],
    "date": "2021-11-19",
    "categories": [
      "HMISC",
      "R"
    ],
    "contents": "\nIntroduction\n\n\nlibrary(Hmisc)\nfoo = c(\"a\", \"b\", \"c\")\nprint(foo)\n\n[1] “a” “b” “c”\n\nfoo2 = Cs(a,b,c)\nprint(foo2)\n\n[1] “a” “b” “c”\n\nall.equal(foo, foo2)\n\n[1] TRUE\n\n\n\nprint(Cs)\n\nfunction (…) as.character(sys.call())[-1] <bytecode:\n0x7f818c080c70> <environment: namespace:Hmisc>\n\nSample reference section reference. @Pocock1975a\nMethods\nResults\nMy most common usage of the todonotes package, is to insert an\nuncustomized todonotes somewhere in a latex document. An example of this\nusage is the command\nReferences\n\n\n\n",
    "preview": {},
    "last_modified": "2022-07-06T18:32:48-07:00",
    "input_file": {}
  },
  {
    "path": "posts/2021-07-07-demo/",
    "title": "demo post",
    "description": "Demo article to get the hang of Distill",
    "author": [
      {
        "name": "Ronald Glenn Thomas",
        "url": "https://focusonR.org"
      }
    ],
    "date": "2021-07-09",
    "categories": [
      "R",
      "AdvR answers"
    ],
    "contents": "\n\nContents\nIntroduction\nMethods\nResults\nReferences\nIntroduction\nMethods\nResults\nAcknowledgments\nAuthor Contributions\n\nCode\nReferences\n\nIntroduction\nSample reference section reference. (Pocock 2005).\nMethods\nA careful reading of the chapter. Reference additional references including:\nResults\nNotes and offered solutions.\n\n\n\n\nkable(head( mtcars ), \"html\")\n\n\n\nmpg\n\n\ncyl\n\n\ndisp\n\n\nhp\n\n\ndrat\n\n\nwt\n\n\nqsec\n\n\nvs\n\n\nam\n\n\ngear\n\n\ncarb\n\n\nMazda RX4\n\n\n21\n\n\n6\n\n\n160\n\n\n110\n\n\n3.9\n\n\n2.6\n\n\n16\n\n\n0\n\n\n1\n\n\n4\n\n\n4\n\n\nMazda RX4 Wag\n\n\n21\n\n\n6\n\n\n160\n\n\n110\n\n\n3.9\n\n\n2.9\n\n\n17\n\n\n0\n\n\n1\n\n\n4\n\n\n4\n\n\nDatsun 710\n\n\n23\n\n\n4\n\n\n108\n\n\n93\n\n\n3.9\n\n\n2.3\n\n\n19\n\n\n1\n\n\n1\n\n\n4\n\n\n1\n\n\nHornet 4 Drive\n\n\n21\n\n\n6\n\n\n258\n\n\n110\n\n\n3.1\n\n\n3.2\n\n\n19\n\n\n1\n\n\n0\n\n\n3\n\n\n1\n\n\nHornet Sportabout\n\n\n19\n\n\n8\n\n\n360\n\n\n175\n\n\n3.1\n\n\n3.4\n\n\n17\n\n\n0\n\n\n0\n\n\n3\n\n\n2\n\n\nValiant\n\n\n18\n\n\n6\n\n\n225\n\n\n105\n\n\n2.8\n\n\n3.5\n\n\n20\n\n\n1\n\n\n0\n\n\n3\n\n\n1\n\nlibrary(DT)\ndatatable(iris)\n\n\n\n1 + 1\n\n\\[\n\\sigma = \\sqrt{ \\frac{1}{N} \\sum_{i=1}^N (x_i -\\mu)^2}\n\\]\nFootnotes use standard Pandoc markdown notation, for example.1 The number of the footnote will be automatically generated.\n\nThis content will appear in the gutter of the article.\n\n\n\nReferences\nIntroduction\nMethods\nResults\n\n\nTable 1: tabled visit and week number\n\n\nlen\n\n\nsetosa\n\n\nversicolor\n\n\nvirginica\n\n\nTotal\n\n\nFALSE\n\n\n11\n\n\n0\n\n\n0\n\n\n11\n\n\nTRUE\n\n\n39\n\n\n50\n\n\n50\n\n\n139\n\n\nTotal\n\n\n50\n\n\n50\n\n\n50\n\n\n150\n\n\nAcknowledgments\nThis is a place to recognize people and institutions. It may also be a good place to acknowledge and cite software that makes your work possible.\nAuthor Contributions\nWe strongly encourage you to include an author contributions statement briefly describing what each author did.\nCode\n\nlibrary(pacman)\np_load(DT, janitor, tibble, broom, snakecase, tidyr, data.table,\n     conflicted, rmarkdown,purrr,ztable, hrbrthemes,readr, dplyr,\n       magrittr, lubridate, zoo, mi, survival, ggplot2, printr,\n       lsmeans, ggthemes,  knitr, xtable, doBy, nlme, reshape2,\n       pander, pwr, tufte)\noptions(scipen = 1, digits = 2)\nknitr::opts_chunk$set(\n  echo = TRUE,\n  warning = TRUE,\n  message = TRUE,\n  comment = \"##\",\n  R.options = list(width = 60))\np = ggplot(diamonds, aes(carat, price)) +geom_smooth()+ \n  facet_grid(~ cut)\nsuppressMessages(print(p))\n\nkable(head( mtcars ), \"html\")\nlibrary(DT)\ndatatable(iris)\n1 + 1\np=ggplot(mtcars, aes(hp, mpg)) + geom_point()  \nsuppressMessages(print(p))\n# clear env: objects and packages\nrm(list = ls())\noptions(knitr.kable.NA = '',dplyr.summarise.inform = FALSE, \n    dplyr.print_max = 1e9,knitr.table.format = \"latex\")\n\nopts_chunk$set(warning = F, message = F, echo = F, fig.width = 3.2,\n       fig.height = 3,  results = \"asis\", dev = \"pdf\",\n       opts_chunk$set(cache.path = \"cache/\"))\nsource(\"~/work/reports/templates/zz.tools.R\")\noptions(scipen = 1, digits = 2)\n# steps to add a simple table \n# 1) inside R block: create the table in tabyl(), call it tab1\n# > dat  %>%  tabyl(var1, var2)\nlibrary(kableExtra)\n# 3. kable(tab1, \"latex\", booktabs = T,escape=FALSE) %>%\n#       kable_styling(latex_options = \"striped\")   \n# 4. zz.figured(tab1)\n# 5. outside R block: \\newpage \\includegraphics[]{./tables/tab1.pdf}\n# 6. choose between the two versions. \n# 7. add a caption.  \\captionof{figure}{tab1 caption}\ntab1 = iris  %>%  \nmutate(len = Petal.Length > 1.3)  %>%  \ntabyl(len,Species) %>%  \nadorn_totals(where = \"row\") %>%  \nadorn_totals(where = \"col\")   \nout = kbl(tab1,format=\"html\",  booktabs = T,escape=FALSE, \n    caption = \"tabled visit and week number\") %>%\n        kable_paper(latex_options = \"striped\")    \nout\n# follow with latex outside R chunk\n# \\includegraphics[]{./tables/tab1.pdf}\n\nReferences\n\n\nPocock, SJ. 2005. “when (not) to stop a clinical trial for Benefit.” JAMA: The Journal of the American Medical Association 294 (17): 2228–30. http://jama.ama-assn.org/content/294/17/2228.short.\n\n\nThis will become a hover-able footnote↩︎\n",
    "preview": "posts/2021-07-07-demo/distill-preview.png",
    "last_modified": "2021-07-09T20:12:19-07:00",
    "input_file": {},
    "preview_width": 1152,
    "preview_height": 288
  }
]
