{
  "articles": [
    {
      "path": "about.html",
      "title": "About this blog",
      "description": "Some additional details about the blog",
      "author": [],
      "contents": "\n\n\n\n",
      "last_modified": "2022-08-05T09:45:32-07:00"
    },
    {
      "path": "contributors.html",
      "title": "Contributors",
      "author": [],
      "contents": "\nBelow is a list of contributors to this blog.\nName\nBio\nRG Thomas\nData Scientist and rookie blogger.\n\n\n\n",
      "last_modified": "2022-08-05T09:45:32-07:00"
    },
    {
      "path": "draftpost.2022-04-20-1156.html",
      "author": [],
      "contents": "\nIntroduction\nSample reference section reference. @Pocock1975a\nMethods\nResults\nMy most common usage of the todonotes package, is to insert an\nuncustomized todonotes somewhere in a latex document. An example of this\nusage is the command\nReferences\n\n\n\n",
      "last_modified": "2022-08-05T09:45:34-07:00"
    },
    {
      "path": "draftpost.html",
      "author": [],
      "contents": "\n\n\n\n",
      "last_modified": "2022-08-05T09:45:35-07:00"
    },
    {
      "path": "exampleRmarkdown.html",
      "author": [],
      "contents": "\nThis post examines the features of R\nMarkdown using knitr in\nRstudio 0.96. This combination of tools provides an exciting improvement\nin usability for reproducible\nanalysis. Specifically, this post (1) discusses getting started with\nR Markdown and knitr in Rstudio 0.96; (2) provides a basic\nexample of producing console output and plots using R Markdown; (3)\nhighlights several code chunk options such as caching and controlling\nhow input and output is displayed; (4) demonstrates use of standard\nMarkdown notation as well as the extended features of formulas and\ntables; and (5) discusses the implications of R Markdown. This post was\nproduced with R Markdown. The source code is available here as a gist.\nThe post may be most useful if the source code and displayed post are\nviewed side by side. In some instances, I include a copy of the R\nMarkdown in the displayed HTML, but most of the time I assume you are\nreading the source and post side by side.\n\nGetting started\nTo work with R Markdown, if necessary:\nInstall R\nInstall the lastest version of RStudio (at time of posting,\nthis is 0.96)\nInstall the latest version of the knitr package:\ninstall.packages(\"knitr\")\nTo run the basic working example that produced this blog post:\nOpen R Studio, and go to File - New - R Markdown\nIf necessary install ggplot2 and lattice\npackages:\ninstall.packages(\"ggplot2\"); install.packages(\"lattice\")\nPaste in the contents of this gist (which contains the R Markdown\nfile used to produce this post) and save the file with an\n.rmd extension\nClick Knit HTML\nPrepare for analyses\n\n\nset.seed(1234)\nlibrary(ggplot2)\nlibrary(lattice)\n\n\nBasic console output\nTo insert an R code chunk, you can type it manually or just press\nChunks - Insert chunks or use the shortcut key. This will\nproduce the following code chunk:\n<div class=\"layout-chunk\" data-layout=\"l-body\">\n\n\n<\/div>\nPressing tab when inside the braces will bring up code chunk\noptions.\nThe following R code chunk labelled basicconsole is as\nfollows:\n<div class=\"layout-chunk\" data-layout=\"l-body\">\n<div class=\"sourceCode\"><pre class=\"sourceCode r\"><code class=\"sourceCode r\"><span><span class='va'>x<\/span> <span class='op'>&lt;-<\/span> <span class='fl'>1<\/span><span class='op'>:<\/span><span class='fl'>10<\/span><\/span>\n<span><span class='va'>y<\/span> <span class='op'>&lt;-<\/span> <span class='fu'><a href='https://rdrr.io/r/base/Round.html'>round<\/a><\/span><span class='op'>(<\/span><span class='fu'><a href='https://rdrr.io/r/stats/Normal.html'>rnorm<\/a><\/span><span class='op'>(<\/span><span class='fl'>10<\/span>, <span class='va'>x<\/span>, <span class='fl'>1<\/span><span class='op'>)<\/span>, <span class='fl'>2<\/span><span class='op'>)<\/span><\/span>\n<span><span class='va'>df<\/span> <span class='op'>&lt;-<\/span> <span class='fu'><a href='https://rdrr.io/r/base/data.frame.html'>data.frame<\/a><\/span><span class='op'>(<\/span><span class='va'>x<\/span>, <span class='va'>y<\/span><span class='op'>)<\/span><\/span>\n<span><span class='va'>df<\/span><\/span><\/code><\/pre><\/div>\n\n\n|  x|     y|\n|--:|-----:|\n|  1| -0.21|\n|  2|  2.28|\n|  3|  4.08|\n|  4|  1.65|\n|  5|  5.43|\n|  6|  6.51|\n|  7|  6.43|\n|  8|  7.45|\n|  9|  8.44|\n| 10|  9.11|\n\n<\/div>\nThe code chunk input and output is then displayed as follows:\n\n\nx <- 1:10\ny <- round(rnorm(10, x, 1), 2)\ndf <- data.frame(x, y)\ndf\n\nx\ny\n1\n0.52\n2\n1.00\n3\n2.22\n4\n4.06\n5\n5.96\n6\n5.89\n7\n6.49\n8\n7.09\n9\n8.16\n10\n12.42\n\nPlots\nImages generated by knitr are saved in a figures folder.\nHowever, they also appear to be represented in the HTML output using a\ndata URI\nscheme. This means that you can paste the HTML into a blog post or\ndiscussion forum and you don’t have to worry about finding a place to\nstore the images; they’re embedded in the HTML.\nSimple plot\nHere is a basic plot using base graphics:\n<div class=\"layout-chunk\" data-layout=\"l-body\">\n<div class=\"sourceCode\"><pre class=\"sourceCode r\"><code class=\"sourceCode r\"><span><span class='fu'><a href='https://rdrr.io/r/graphics/plot.default.html'>plot<\/a><\/span><span class='op'>(<\/span><span class='va'>x<\/span><span class='op'>)<\/span><\/span><\/code><\/pre><\/div>\n<img src=\"exampleRmarkdown_files/figure-html5/unnamed-chunk-4-1.png\" width=\"624\" />\n\n<\/div>\n\n\nplot(x)\n\n\n\nNote that unlike traditional Sweave, there is no need to write\nfig=TRUE.\nMultiple plots\nAlso, unlike traditional Sweave, you can include multiple plots in\none code chunk:\n<div class=\"layout-chunk\" data-layout=\"l-body\">\n<div class=\"sourceCode\"><pre class=\"sourceCode r\"><code class=\"sourceCode r\"><span><span class='fu'><a href='https://rdrr.io/r/graphics/boxplot.html'>boxplot<\/a><\/span><span class='op'>(<\/span><span class='fl'>1<\/span><span class='op'>:<\/span><span class='fl'>10<\/span><span class='op'>~<\/span><span class='fu'><a href='https://rdrr.io/r/base/rep.html'>rep<\/a><\/span><span class='op'>(<\/span><span class='fl'>1<\/span><span class='op'>:<\/span><span class='fl'>2<\/span>,<span class='fl'>5<\/span><span class='op'>)<\/span><span class='op'>)<\/span><\/span><\/code><\/pre><\/div>\n<img src=\"exampleRmarkdown_files/figure-html5/unnamed-chunk-5-1.png\" width=\"624\" /><div class=\"sourceCode\"><pre class=\"sourceCode r\"><code class=\"sourceCode r\"><span><span class='fu'><a href='https://rdrr.io/r/graphics/plot.default.html'>plot<\/a><\/span><span class='op'>(<\/span><span class='va'>x<\/span>, <span class='va'>y<\/span><span class='op'>)<\/span><\/span><\/code><\/pre><\/div>\n<img src=\"exampleRmarkdown_files/figure-html5/unnamed-chunk-5-2.png\" width=\"624\" />\n\n<\/div>\n\n\nboxplot(1:10~rep(1:2,5))\n\n\nplot(x, y)\n\n\n\nggplot2 plot\nGgplot2 plots work well:\n\n\nqplot(x, y, data=df)\n\n\n\nlattice plot\nAs do lattice plots:\n\n\nxyplot(y~x)\n\n\n\nNote that unlike traditional Sweave, there is no need to print\nlattice plots directly.\nR Code chunk features\nCreate Markdown code from R\nThe following code hides the command input (i.e.,\necho=FALSE), and outputs the content directly as code\n(i.e., results=asis, which is similar to\nresults=tex in Sweave).\n<div class=\"layout-chunk\" data-layout=\"l-body\">\nHere are some dot points\n\n* The value of y[1] is 0.52\n* The value of y[2] is 1\n* The value of y[3] is 2.22\n\n<\/div>\n\nHere are some dot points\nThe value of y[1] is 0.52\nThe value of y[2] is 1\nThe value of y[3] is 2.22\n\nCreate Markdown table code\nfrom R\n<div class=\"layout-chunk\" data-layout=\"l-body\">\nx | y\n--- | ---\n1 | 0.52\n2 | 1\n3 | 2.22\n4 | 4.06\n5 | 5.96\n6 | 5.89\n7 | 6.49\n8 | 7.09\n9 | 8.16\n10 | 12.42\n\n<\/div>\n\nx\ny\n1\n0.52\n2\n1\n3\n2.22\n4\n4.06\n5\n5.96\n6\n5.89\n7\n6.49\n8\n7.09\n9\n8.16\n10\n12.42\n\nControl output display\nThe folllowing code supresses display of R input commands (i.e.,\necho=FALSE) and removes any preceding text from console\noutput (comment=\"\"; the default is\ncomment=\"##\").\n<div class=\"layout-chunk\" data-layout=\"l-body\">\n\n|  x|    y|\n|--:|----:|\n|  1| 0.52|\n|  2| 1.00|\n|  3| 2.22|\n|  4| 4.06|\n|  5| 5.96|\n|  6| 5.89|\n\n<\/div>\n\nx\ny\n1\n0.52\n2\n1.00\n3\n2.22\n4\n4.06\n5\n5.96\n6\n5.89\n\nControl figure size\nThe following is an example of a smaller figure using\nfig.width and fig.height options.\n<div class=\"layout-chunk\" data-layout=\"l-body\">\n<div class=\"sourceCode\"><pre class=\"sourceCode r\"><code class=\"sourceCode r\"><span><span class='fu'><a href='https://rdrr.io/r/graphics/plot.default.html'>plot<\/a><\/span><span class='op'>(<\/span><span class='va'>x<\/span><span class='op'>)<\/span><\/span><\/code><\/pre><\/div>\n<img src=\"exampleRmarkdown_files/figure-html5/unnamed-chunk-10-1.png\" width=\"288\" />\n\n<\/div>\n\n\nplot(x)\n\n\n\nCache analysis\nCaching analyses is straightforward. Here’s example code. On the\nfirst run on my computer, this took about 10 seconds. On subsequent\nruns, this code was not run.\nIf you want to rerun cached code chunks, just delete the contents of\nthe cache folder\n<div class=\"layout-chunk\" data-layout=\"l-body\">\n<div class=\"sourceCode\"><pre class=\"sourceCode r\"><code class=\"sourceCode r\"><span class='kw'>for<\/span> <span class='op'>(<\/span><span class='va'>i<\/span> <span class='kw'>in<\/span> <span class='fl'>1<\/span><span class='op'>:<\/span><span class='fl'>5000<\/span><span class='op'>)<\/span> <span class='op'>{<\/span>\n    <span class='fu'><a href='https://rdrr.io/r/stats/lm.html'>lm<\/a><\/span><span class='op'>(<\/span><span class='op'>(<\/span><span class='va'>i<\/span><span class='op'>+<\/span><span class='fl'>1<\/span><span class='op'>)<\/span><span class='op'>~<\/span><span class='va'>i<\/span><span class='op'>)<\/span>\n<span class='op'>}<\/span>\n<\/code><\/pre><\/div>\n\n<\/div>\nBasic markdown functionality\nFor those not familiar with standard Markdown, the\nfollowing may be useful. See the source code for how to produce such\npoints. However, RStudio does include a Markdown quick reference button\nthat adequatly covers this material.\nDot Points\nSimple dot points:\nPoint 1\nPoint 2\nPoint 3\nand numeric dot points:\nNumber 1\nNumber 2\nNumber 3\nand nested dot points:\nA\nA.1\nA.2\n\nB\nB.1\nB.2\n\nEquations\nEquations are included by using LaTeX notation and including them\neither between single dollar signs (inline equations) or double dollar\nsigns (displayed equations). If you hang around the Q&A site CrossValidated you’ll be\nfamiliar with this idea.\nThere are inline equations such as \\(y_i =\n\\alpha + \\beta x_i + e_i\\).\nAnd displayed formulas:\n\\[\\frac{1}{1+\\exp(-x)}\\]\nknitr provides self-contained HTML code that calls a Mathjax script\nto display formulas. However, in order to include the script in my blog\nposts I took the script\nand incorporated it into my blogger template. If you are viewing this\npost through syndication or an RSS reader, this may not work. You may\nneed to view this post on my website.\nTables\nTables can be included using the following notation\nA\nB\nC\n1\nMale\nBlue\n2\nFemale\nPink\nHyperlinks\nIf you like this post, you may wish to subscribe to my RSS feed.\nImages\nHere’s an example image:\nimage from redmond barry building\nunimelbCode\nHere is Markdown R code chunk displayed as code:\n<div class=\"layout-chunk\" data-layout=\"l-body\">\n<div class=\"sourceCode\"><pre class=\"sourceCode r\"><code class=\"sourceCode r\"><span><span class='va'>x<\/span> <span class='op'>&lt;-<\/span> <span class='fl'>1<\/span><span class='op'>:<\/span><span class='fl'>10<\/span><\/span>\n<span><span class='va'>x<\/span><\/span><\/code><\/pre><\/div>\n\n```\n [1]  1  2  3  4  5  6  7  8  9 10\n```\n\n<\/div>\nAnd then there’s inline code such as x <- 1:10.\nQuote\nLet’s quote some stuff:\n\nTo be, or not to be, that is the question: Whether ’tis nobler in the\nmind to suffer The slings and arrows of outrageous fortune,\n\nConclusion\nR Markdown is awesome.\nThe ratio of markup to content is excellent.\nFor exploratory analyses, blog posts, and the like R Markdown will\nbe a powerful productivity booster.\nFor journal articles, LaTeX will presumably still be required.\n\nThe RStudio team have made the whole process very user friendly.\nRStudio provides useful shortcut keys for compiling to HTML, and\nrunning code chunks. These shortcut keys are presented in a clear\nway.\nThe incorporated extensions to Markdown, particularly formula and\ntable support, are particularly useful.\nJump-to-chunk feature facilitates navigation. It helps if your code\nchunks have informative names.\nCode completion on R code chunk options is really helpful. See also\nchunk options documentation on\nthe knitr website.\n\nOther recent posts on R markdown include those by :\nChristopher\nGandrud\nMarkcus\nGesmann\nRstudio\non R Markdown\nYihui Xie: I really want to\nthank him for developing knitr. He has also posted this\nexample of R Markdown.\n\nQuestions\nThe following are a few questions I encountered along the way that\nmight interest others. ### Annoying <br/>’s\nQuestion: I asked on the Rstudio discussion site: Why\ndoes Markdown to HTML insert <br/> on new\nlines?\nAnswer: I just do a find and delete on this text for\nnow.\nTemporarily disable caching\nQuestion: I asked on StackOverflow about How to set cache=FALSE\nfor a knitr markdown document and override code chunk settings?\nAnswer: Delete the cache folder. But there are other\npossible workflows.\nEquivalent of Sexpr\nQuestion: I asked on Stack Overvlow about whether there an R\nMarkdown equivalent to Sexpr in Sweave?.\nAnswer: Include the code between brackets of\n“backick r space” and “backtick”. E.g., in the source code I have\ncalculated 2 + 2 = 4 .\n\n\n\n",
      "last_modified": "2022-08-05T09:45:39-07:00"
    },
    {
      "path": "four.html",
      "title": "four",
      "description": "A new article created using the Distill format.\n",
      "author": [
        {
          "name": "Ronald Glenn Thomas",
          "url": "https://focusonR.org"
        }
      ],
      "date": "`r Sys.Date()`",
      "contents": "\nIntroduction\nSample reference section reference. @Pocock1975a\nMethods\nResults\nMy most common usage of the todonotes package, is to insert an\nuncustomized todonotes somewhere in a latex document. An example of this\nusage is the command\nReferences\n\n\n\n",
      "last_modified": "2022-08-05T09:45:41-07:00"
    },
    {
      "path": "index.html",
      "title": "Focus on R",
      "author": [],
      "contents": "\n\n\n\n",
      "last_modified": "2022-08-05T09:45:42-07:00"
    },
    {
      "path": "template.html",
      "title": "Blog post template",
      "description": "A new article created using the Distill format.\n",
      "author": [
        {
          "name": "Ronald Glenn Thomas",
          "url": "https://focusonR.org"
        }
      ],
      "date": "`r Sys.Date()`",
      "contents": "\nIntroduction\nMy most common usage of the todonotes package, is to insert an\nuncustomized todonotes somewhere in a latex document. An example of this\nusage is the command Sample reference section reference. (Pocock 2005).\nMethods\nA careful reading of the chapter. Reference additional references\nincluding:\nResults\nNotes and offered solutions.\nReferences\n\n\n\nPocock, SJ. 2005. “when (not) to stop a\nclinical trial for Benefit.” JAMA: The Journal of the\nAmerican Medical Association 294 (17): 2228–30. http://jama.ama-assn.org/content/294/17/2228.short.\n\n\n\n\n",
      "last_modified": "2022-08-05T09:45:45-07:00"
    }
  ],
  "collections": ["posts/posts.json"]
}
